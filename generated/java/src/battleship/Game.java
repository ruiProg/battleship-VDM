package battleship;
//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2017-01-04 by the VDM++ to JAVA Code Generator
// (v9.0.7 - Thu 29-Sep-2016 22:13:23 +0900)
//
// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\battleship-VDM\\Game.vdmpp".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Game implements EvaluatePP {

// ***** VDMTOOLS START Name=playerA KEEP=NO
  protected volatile Player playerA = null;
// ***** VDMTOOLS END Name=playerA

// ***** VDMTOOLS START Name=playerB KEEP=NO
  protected volatile Player playerB = null;
// ***** VDMTOOLS END Name=playerB

// ***** VDMTOOLS START Name=currPlayer KEEP=NO
  protected volatile Player currPlayer = null;
// ***** VDMTOOLS END Name=currPlayer

// ***** VDMTOOLS START Name=players KEEP=NO
  protected volatile Set players = new HashSet();
// ***** VDMTOOLS END Name=players

// ***** VDMTOOLS START Name=currState KEEP=NO
  protected volatile Object currState = null;
// ***** VDMTOOLS END Name=currState

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile GameSentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=GameSentinel KEEP=NO
  class GameSentinel extends Sentinel {

    public final int Game = 0;

    public final int startGame = 1;

    public final int startRounds = 2;

    public final int switchTurns = 3;

    public final int createPlayer = 4;

    public final int changePlayers = 5;

    public final int shipPlacement = 6;

    public final int getOtherPlayer = 7;

    public final int guessShipPosition = 8;

    public final int nr_functions = 9;

    public GameSentinel () throws CGException {}

    public GameSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=GameSentinel

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int

// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new GameSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel

// ***** VDMTOOLS START Name=vdm_init_Game KEEP=NO
  private void vdm_init_Game () {
    try {
      setSentinel();
      playerA = new Player(new String("Default_1"));
      playerB = new Player(new String("Default_2"));
      currPlayer = playerA;
      players.add(playerA);
      players.add(playerB);
      currState = new quotes.Off();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Game

// ***** VDMTOOLS START Name=inv_Game KEEP=NO
  public Boolean inv_Game () {
    Boolean rexpr_6 = null;
    Set var2_9 = new HashSet();
    var2_9.add(playerA);
    var2_9.add(playerB);
    if (UTIL.Contains(var2_9, currPlayer)) {
      Boolean var2_12 = null;
      if (UTIL.Contains(players, playerA)) {
        Boolean var2_16 = null;
        if (UTIL.Contains(players, playerB)) {
          boolean tmpQuant_21 = true;
          {
            Set tmpSet_33 = new HashSet(players);
            for (Iterator enm_32 = tmpSet_33.iterator(); enm_32.hasNext() && tmpQuant_21; ) {
              final Player p2 = (Player)enm_32.next();
              Set tmpSet_31 = new HashSet(players);
              for (Iterator enm_30 = tmpSet_31.iterator(); enm_30.hasNext() && tmpQuant_21; ) {
                final Player p1 = (Player)enm_30.next();
                try {
					if (!((!UTIL.equals(p1, p2)) ? (!UTIL.equals(p1.getName(), p2.getName())) : true)) 
					  tmpQuant_21 = false;
				} catch (CGException e) {
					 System.out.println(e.getMessage());
				}
              }
            }
          }
          var2_16 = Boolean.valueOf(tmpQuant_21);
        }
        else 
          var2_16 = Boolean.FALSE;
        var2_12 = var2_16;
      }
      else 
        var2_12 = Boolean.FALSE;
      rexpr_6 = var2_12;
    }
    else 
      rexpr_6 = Boolean.FALSE;
    return rexpr_6;
  }
// ***** VDMTOOLS END Name=inv_Game

// ***** VDMTOOLS START Name=Game KEEP=NO
  public Game () throws CGException {
    vdm_init_Game();
  }
// ***** VDMTOOLS END Name=Game

// ***** VDMTOOLS START Name=Game#2|String|String KEEP=NO
  public Game (final String name1, final String name2) throws CGException {
    vdm_init_Game();
    if (!this.pre_Game(name1, name2).booleanValue()) 
      UTIL.RunTime("Precondition failure in Game");
    playerA = new Player(name1);
    playerB = new Player(name2);
    currPlayer = (Player)UTIL.clone(playerA);
    Set rhs_8 = new HashSet();
    rhs_8.add(playerA);
    rhs_8.add(playerB);
    players = (Set)UTIL.clone(rhs_8);
  }
// ***** VDMTOOLS END Name=Game#2|String|String

// ***** VDMTOOLS START Name=pre_Game#2|String|String KEEP=NO
  public Boolean pre_Game (final String name1, final String name2) throws CGException {
    return Boolean.valueOf(UTIL.equals(currState, new quotes.Off()) ? (!UTIL.equals(name1, name2)) : false);
  }
// ***** VDMTOOLS END Name=pre_Game#2|String|String

// ***** VDMTOOLS START Name=createPlayer#1|String KEEP=NO
  public Player createPlayer (final String name) throws CGException {
    sentinel.entering(sentinel.createPlayer);
    try {
      if (!this.pre_createPlayer(name).booleanValue()) 
        UTIL.RunTime("Precondition failure in createPlayer");
      {
        Player player = new Player(name);
        players.add(player);
        if (!this.inv_Game().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Game");
        return player;
      }
    }
    finally {
      sentinel.leaving(sentinel.createPlayer);
    }
  }
// ***** VDMTOOLS END Name=createPlayer#1|String

// ***** VDMTOOLS START Name=pre_createPlayer#1|String KEEP=NO
  public Boolean pre_createPlayer (final String name) throws CGException {
    boolean tmpQuant_4 = false;
    {
      Set tmpSet_10 = new HashSet(players);
      for (Iterator enm_9 = tmpSet_10.iterator(); enm_9.hasNext() && !tmpQuant_4; ) {
        final Player p = (Player)enm_9.next();
        if (UTIL.equals(p.getName(), name)) {
          tmpQuant_4 = true;
        }
      }
    }
    return Boolean.valueOf(!tmpQuant_4);
  }
// ***** VDMTOOLS END Name=pre_createPlayer#1|String

// ***** VDMTOOLS START Name=changePlayers#2|String|String KEEP=NO
  public void changePlayers (final String name1, final String name2) throws CGException {
    sentinel.entering(sentinel.changePlayers);
    try {
      if (!this.pre_changePlayers(name1, name2).booleanValue()) 
        UTIL.RunTime("Precondition failure in changePlayers");
      {
        Player tmpPlayer = null;
        {
          int count_3 = 0;
          Set tmpSet_12 = new HashSet(players);
          for (Iterator enm_11 = tmpSet_12.iterator(); enm_11.hasNext() && (count_3 <= 2); ) {
            final Player tmpElem_7 = (Player)enm_11.next();
            final Player p = tmpElem_7;
            if (UTIL.equals(p.getName(), name1)) {
              count_3++;
              tmpPlayer = tmpElem_7;
            }
          }
          if (count_3 != 1) 
            UTIL.RunTime("No unique element in \'iota\'");
        }
        {
          final Player atom_1 = tmpPlayer;
          Player atom_2_15 = null;
          {
            int count_16 = 0;
            Set tmpSet_25 = new HashSet(players);
            for (Iterator enm_24 = tmpSet_25.iterator(); enm_24.hasNext() && (count_16 <= 2); ) {
              final Player tmpElem_20 = (Player)enm_24.next();
              final Player p_1 = tmpElem_20;
              if (UTIL.equals(p_1.getName(), name2)) {
                count_16++;
                atom_2_15 = tmpElem_20;
              }
            }
            if (count_16 != 1) 
              UTIL.RunTime("No unique element in \'iota\'");
          }
          final Player atom_2 = atom_2_15;
          final Player atom_3 = tmpPlayer;
          playerA = (Player)UTIL.clone(atom_1);
          playerB = (Player)UTIL.clone(atom_2);
          currPlayer = (Player)UTIL.clone(atom_3);
        }
        if (!this.inv_Game().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Game");
      }
    }
    finally {
      sentinel.leaving(sentinel.changePlayers);
    }
  }
// ***** VDMTOOLS END Name=changePlayers#2|String|String

// ***** VDMTOOLS START Name=pre_changePlayers#2|String|String KEEP=NO
  public Boolean pre_changePlayers (final String name1, final String name2) throws CGException {
    Boolean varRes_3 = null;
    if (UTIL.equals(currState, new quotes.Off())) {
      boolean tmpQuant_8 = false;
      {
        Set tmpSet_20 = new HashSet(players);
        for (Iterator enm_19 = tmpSet_20.iterator(); enm_19.hasNext() && !tmpQuant_8; ) {
          final Player p2 = (Player)enm_19.next();
          Set tmpSet_18 = new HashSet(players);
          for (Iterator enm_17 = tmpSet_18.iterator(); enm_17.hasNext() && !tmpQuant_8; ) {
            final Player p1 = (Player)enm_17.next();
            if (UTIL.equals(p1.getName(), name1) ? UTIL.equals(p2.getName(), name2) : false) {
              tmpQuant_8 = true;
            }
          }
        }
      }
      varRes_3 = Boolean.valueOf(tmpQuant_8);
    }
    else 
      varRes_3 = Boolean.FALSE;
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_changePlayers#2|String|String

// ***** VDMTOOLS START Name=switchTurns KEEP=NO
  public void switchTurns () throws CGException {
    sentinel.entering(sentinel.switchTurns);
    try {
      if (!this.pre_switchTurns().booleanValue()) 
        UTIL.RunTime("Precondition failure in switchTurns");
      if (UTIL.equals(currPlayer, playerA)) {
        currPlayer = (Player)UTIL.clone(playerB);
        if (!this.inv_Game().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Game");
      }
      else {
        currPlayer = (Player)UTIL.clone(playerA);
        if (!this.inv_Game().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Game");
      }
    }
    finally {
      sentinel.leaving(sentinel.switchTurns);
    }
  }
// ***** VDMTOOLS END Name=switchTurns

// ***** VDMTOOLS START Name=pre_switchTurns KEEP=NO
  public Boolean pre_switchTurns () throws CGException {
    return Boolean.valueOf(!UTIL.equals(currState, new quotes.Off()));
  }
// ***** VDMTOOLS END Name=pre_switchTurns

// ***** VDMTOOLS START Name=getOtherPlayer KEEP=NO
  public Player getOtherPlayer () throws CGException {
    sentinel.entering(sentinel.getOtherPlayer);
    try {
      if (UTIL.equals(currPlayer, playerA)) 
        return playerB;
      else 
        return playerA;
    }
    finally {
      sentinel.leaving(sentinel.getOtherPlayer);
    }
  }
// ***** VDMTOOLS END Name=getOtherPlayer

// ***** VDMTOOLS START Name=startGame KEEP=NO
  public String startGame () throws CGException {
    sentinel.entering(sentinel.startGame);
    try {
      if (!this.pre_startGame().booleanValue()) 
        UTIL.RunTime("Precondition failure in startGame");
      playerA.addBoards();
      playerB.addBoards();
      currState = new quotes.Start();
      if (!this.inv_Game().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Game");
      return new String("Game started with following players:\n").concat(playerA.printInfo()).concat(playerB.printInfo()).concat("\n\n\n\n").concat(currPlayer.printPlacementStatus());
    }
    finally {
      sentinel.leaving(sentinel.startGame);
    }
  }
// ***** VDMTOOLS END Name=startGame

// ***** VDMTOOLS START Name=pre_startGame KEEP=NO
  public Boolean pre_startGame () throws CGException {
    return Boolean.valueOf(UTIL.equals(currState, new quotes.Off()));
  }
// ***** VDMTOOLS END Name=pre_startGame

// ***** VDMTOOLS START Name=shipPlacement#4|Object|Character|Number|Object KEEP=NO
  public String shipPlacement (final Object ship, final Character colCh, final Number line, final Object dir) throws CGException {
    sentinel.entering(sentinel.shipPlacement);
    try {
      if (!this.pre_shipPlacement(ship, colCh, line, dir).booleanValue()) 
        UTIL.RunTime("Precondition failure in shipPlacement");
      {
        String ret = null;
        currPlayer.shipPlacement(ship, colCh, line, dir);
        ret = UTIL.ConvertToString(UTIL.clone(currPlayer.printPlacementStatus()));
        if (!this.inv_Game().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Game");
        if (currPlayer.allShipsPlaced().booleanValue()) {
          switchTurns();
          ret = UTIL.ConvertToString(UTIL.clone(ret.concat("\n\n\n\n\n")));
          if (!this.inv_Game().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Game");
          if (currPlayer.allShipsPlaced().booleanValue()) {
            currState = new quotes.Placed();
            if (!this.inv_Game().booleanValue()) 
              UTIL.RunTime("Instance invariant failure in Game");
            ret = UTIL.ConvertToString(UTIL.clone(ret.concat("All ships placed\n")));
            if (!this.inv_Game().booleanValue()) 
              UTIL.RunTime("Instance invariant failure in Game");
          }
          else {
            ret = UTIL.ConvertToString(UTIL.clone(ret.concat(currPlayer.printPlacementStatus())));
            if (!this.inv_Game().booleanValue()) 
              UTIL.RunTime("Instance invariant failure in Game");
          }
        }
        return ret;
      }
    }
    finally {
      sentinel.leaving(sentinel.shipPlacement);
    }
  }
// ***** VDMTOOLS END Name=shipPlacement#4|Object|Character|Number|Object

// ***** VDMTOOLS START Name=pre_shipPlacement#4|Object|Character|Number|Object KEEP=NO
  public Boolean pre_shipPlacement (final Object ship, final Character colCh, final Number line, final Object dir) throws CGException {
    return Boolean.valueOf(UTIL.equals(currState, new quotes.Start()));
  }
// ***** VDMTOOLS END Name=pre_shipPlacement#4|Object|Character|Number|Object

// ***** VDMTOOLS START Name=startRounds KEEP=NO
  public String startRounds () throws CGException {
    sentinel.entering(sentinel.startRounds);
    try {
      if (!this.pre_startRounds().booleanValue()) 
        UTIL.RunTime("Precondition failure in startRounds");
      playerA.startRounds();
      playerB.startRounds();
      currState = new quotes.Round();
      if (!this.inv_Game().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Game");
      return currPlayer.printGameStatus();
    }
    finally {
      sentinel.leaving(sentinel.startRounds);
    }
  }
// ***** VDMTOOLS END Name=startRounds

// ***** VDMTOOLS START Name=pre_startRounds KEEP=NO
  public Boolean pre_startRounds () throws CGException {
    return Boolean.valueOf(UTIL.equals(currState, new quotes.Placed()));
  }
// ***** VDMTOOLS END Name=pre_startRounds

// ***** VDMTOOLS START Name=guessShipPosition#2|Character|Number KEEP=NO
  public String guessShipPosition (final Character colCh, final Number line) throws CGException {
    sentinel.entering(sentinel.guessShipPosition);
    try {
      if (!this.pre_guessShipPosition(colCh, line).booleanValue()) 
        UTIL.RunTime("Precondition failure in guessShipPosition");
      {
        Player othPlayer = getOtherPlayer();
        Object code = othPlayer.registerAttack(colCh, line);
        String ret = "";
        Boolean vdm_final = currPlayer.registerResult(code, colCh, line);
        if (UTIL.equals(code, new quotes.Miss())) {
          ret = UTIL.ConvertToString(UTIL.clone(ret.concat("\n\nSplash!! You missed!\n")));
          if (!this.inv_Game().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Game");
          switchTurns();
        }
        else if (UTIL.equals(code, new quotes.Hit())) {
          ret = UTIL.ConvertToString(UTIL.clone(ret.concat("\n\nGreat strike\n")));
          if (!this.inv_Game().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Game");
        }
        else {
          ret = UTIL.ConvertToString(UTIL.clone(ret.concat(currPlayer.printTakeDown(code))));
          if (!this.inv_Game().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Game");
        }
        if (vdm_final.booleanValue()) {
          ret = UTIL.ConvertToString(UTIL.clone(ret.concat(currPlayer.printVictory())));
          if (!this.inv_Game().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Game");
          currState = new quotes.Off();
          if (!this.inv_Game().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Game");
          playerA.clearData();
          playerB.clearData();
          return ret;
        }
        ret = UTIL.ConvertToString(UTIL.clone(ret.concat("\n\n\n\n\n").concat(currPlayer.printGameStatus())));
        if (!this.inv_Game().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Game");
        return ret;
      }
    }
    finally {
      sentinel.leaving(sentinel.guessShipPosition);
    }
  }
// ***** VDMTOOLS END Name=guessShipPosition#2|Character|Number

// ***** VDMTOOLS START Name=pre_guessShipPosition#2|Character|Number KEEP=NO
  public Boolean pre_guessShipPosition (final Character colCh, final Number line) throws CGException {
    return Boolean.valueOf(UTIL.equals(currState, new quotes.Round()));
  }
// ***** VDMTOOLS END Name=pre_guessShipPosition#2|Character|Number

}

