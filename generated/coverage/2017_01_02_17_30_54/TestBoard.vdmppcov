class TestBoard is subclass of Board
operations
	
	-- todas as células estão vazias ao criar o tabuleiro
	private testCreateBoard : () ==> ()
		testCreateBoard() == (
			dcl b: Board := new Board();
			TestBase`assertEqual(b.countCellType(<Empty>),100);
	);
	
	-- testa mapeamento entre colunas char e seu índice
	private testColMap : () ==> ()
		testColMap() == (
			dcl b: Board := new Board();
			dcl c: Board := new Board();
			TestBase`assertEqual(2,colMap('B'));
			TestBase`assertEqual(2-1,colMap('A'));
			TestBase`assertEqual(2+1,colMap('C'));
			
			b.setComponent(<Cruiser>,1,2);
			c.setComponentCol(<Cruiser>,1,'B');
			TestBase`assertEqual(b.cells(1)(2),c.cells(1)(colMap('B')));
	);
	
	private testEmptyBeforePlacement: () ==> ()
		testEmptyBeforePlacement() == (
		dcl b: Board := new Board();
		b.setComponentCol(<Cruiser>,6,'F');
		TestBase`assertTrue(b.emptyValidCells(2,colMap('C'),<Right>,3));
		TestBase`assertTrue(not b.emptyValidCells(7,colMap('F'),<Up>,3));
		TestBase`assertTrue(not b.emptyValidCells(1,colMap('A'),<Left>,2));
		
		TestBase`assertEqual(b.countCellType(<Submarine>),0);
		TestBase`assertEqual(shipSize(<Submarine>),3);
		b.shipPlacement(<Submarine>,'C',2,<Right>);
		TestBase`assertEqual(b.countCellType(<Submarine>),3);
	);
	
	public run: () ==> ()
		run() == (
			testCreateBoard();
			testColMap();
			testEmptyBeforePlacement();
	);
end TestBoard